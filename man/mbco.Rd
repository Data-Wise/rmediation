% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mbco.R
\name{mbco}
\alias{mbco}
\title{Model-based Constrained Optimization (MBCO) Chi-squared Test}
\usage{
mbco(h0 = NULL, h1 = NULL, R = 10L, type = "asymp", alpha = 0.05,
  checkHess = "No", checkSE = "No", optim = "NPSOL",
  precision = 1e-09)
}
\arguments{
\item{h0}{An \code{OpenMx} model estimated under a null hypothesis, which is a more constrained model}

\item{h1}{An \code{OpenMx} model estimated under an alternative hypothesis, which is a less constrained model. This is usually a model hypothesized by a researcher.}

\item{R}{The number of bootstrap draws.}

\item{type}{If 'asymp' (default), the asymptotic MBCO chi-squares test comparing fit of h0 and h1. If 'parametric', the parametric bootstrap MBCO chi-squared test is computed. If 'semi', the semi-parametric MBCO chi-squared is computed.}

\item{alpha}{Signficance level with the default value of .05}

\item{checkHess}{If 'No' (default), the Hessian matrix would not be calculated.}

\item{checkSE}{if 'No' (default), the standard errors would not be calculated.}

\item{optim}{Choose optimizer availble in OpenMx. The default optimizer is "NPSOL". Other optimizer choices include "CSOLNP" and "SLSQP". See \link{mxOption} for more dettails.}

\item{precision}{Functional precision. The default value is set to 1e-9. See \link{mxOption} for more dettails.}
}
\value{
A \link{list} that contains \item{chisq}{chi-squared test statistic value (not for \code{type='semi'})} \item{\code{df}}{chi-squared df (not for \code{type='semi'})} \item{p}{chi-squared p-value}
}
\description{
This function computes asymptotic MBCO chi-squared test for a smooth function of model parameters including a function of indirect effects.
}
\examples{
data(memory_exp)
endVar <- c('x', 'repetition', 'imagery', 'recall')
manifests <- c('x', 'repetition', 'imagery', 'recall')
full_model <- mxModel(
 "memory_example",
 type = "RAM",
 manifestVars = manifests,
 mxPath(
   from = "x",
   to = endVar,
   arrows = 1,
   free = TRUE,
   values = .2,
   labels = c("a1", "a2", "cp")
 ),
 mxPath(
   from = 'repetition',
  to = 'recall',
  arrows = 1,
   free = TRUE,
   values = .2,
   labels = 'b1'
 ),
 mxPath(
   from = 'imagery',
 to = 'recall',
 arrows = 1,
 free = TRUE,
 values = .2,
 labels = "b2"
),
mxPath(
 from = manifests,
 arrows = 2,
 free = TRUE,
 values = .8
),
mxPath(
 from = "one",
 to = endVar,
 arrows = 1,
 free = TRUE,
 values = .1
),
mxAlgebra(a1 * b1, name = "ind1"),
mxAlgebra(a2 * b2, name = "ind2"),
mxCI("ind1", type = "both"),
mxCI("ind2", type = "both"),
mxData(observed = memory_exp, type = "raw")
)
## Reduced  Model for indirect effect: a1*b1
null_model1 <- mxModel(
model= full_model,
name = "Null Model 1",
mxConstraint(ind1 == 0, name = "ind1_eq0_constr")
)
full_model <- mxTryHard(full_model, checkHess=FALSE, silent = TRUE )
null_model1 <- mxTryHard(null_model1, checkHess=FALSE, silent = TRUE )
mbco(null_model1,full_model)
}
\author{
Davood Tofighi \email{dtofighi@gmail.com}
}
